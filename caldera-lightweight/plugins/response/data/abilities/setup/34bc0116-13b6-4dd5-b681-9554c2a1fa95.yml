- buckets:
  - setup
  repeatable: false
  additional_info: {}
  access: {}
  name: Backup Sensitive Files
  description: Backup sensitive files to temp directory in case these files are maliciously
    modified
  requirements:
  - module: plugins.response.app.requirements.source_fact
    relationship_match:
    - source: file.sensitive.path
  privilege: ''
  technique_id: x
  delete_payload: true
  tactic: setup
  executors:
  - cleanup:
    - rm -rf /tmp/sensitive_file_backups;
    timeout: 60
    language: null
    code: null
    uploads: []
    additional_info: {}
    name: sh
    parsers:
    - module: plugins.response.app.parsers.key_value
      parserconfigs:
      - source: file.sensitive.path
        edge: has_backup
        custom_parser_vals: {}
        target: file.backup.name
    variations: []
    build_target: null
    payloads: []
    platform: linux
    command: "mkdir -p /tmp/sensitive_file_backups;\nfilepath=$(echo \"#{file.sensitive.path}\"\
      \ | sed 's/\\\\\\*/\\*/g');\nfiles=$(find $filepath -maxdepth 0 -type f 2>/dev/null);\n\
      output=\"\";\nfor file in $files;\n  do randname=$(head /dev/urandom | tr -dc\
      \ A-Za-z0-9 | head -c 13);\n  cp $file /tmp/sensitive_file_backups/$randname;\n\
      \  output=\"${output}${file}>${randname}\\n\";\ndone;\necho $output | sed '/^[[:space:]]*$/d'"
  - cleanup:
    - rm -rf /tmp/sensitive_file_backups;
    timeout: 60
    language: null
    code: null
    uploads: []
    additional_info: {}
    name: sh
    parsers:
    - module: plugins.response.app.parsers.key_value
      parserconfigs:
      - source: file.sensitive.path
        edge: has_backup
        custom_parser_vals: {}
        target: file.backup.name
    variations: []
    build_target: null
    payloads: []
    platform: darwin
    command: "mkdir -p /tmp/sensitive_file_backups;\nfilepath=$(echo \"#{file.sensitive.path}\"\
      \ | sed 's/\\\\\\*/\\*/g');\nfiles=$(find $filepath -maxdepth 0 -type f 2>/dev/null);\n\
      output=\"\";\nfor file in $files;\n  do randname=$(head /dev/urandom | LC_CTYPE=C\
      \ tr -dc A-Za-z0-9 | head -c 13);\n  cp $file /tmp/sensitive_file_backups/$randname;\n\
      \  output=\"${output}${file}>${randname}\\n\";\ndone;\necho $output | sed '/^[[:space:]]*$/d'"
  - cleanup:
    - Remove-Item -Recurse -Force C:\Users\Public\sensitive_file_backups;
    timeout: 60
    language: null
    code: null
    uploads: []
    additional_info: {}
    name: psh
    parsers:
    - module: plugins.response.app.parsers.key_value
      parserconfigs:
      - source: file.sensitive.path
        edge: has_backup
        custom_parser_vals: {}
        target: file.backup.name
    variations: []
    build_target: null
    payloads: []
    platform: windows
    command: "New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\sensitive_file_backups\
      \ | Out-Null;\n$output = '';\nGet-Item #{file.sensitive.path} -EA silentlycontinue\
      \ | Where-Object { -not ($_ -is [System.IO.DirectoryInfo]) } | foreach-object\
      \ {\n  $randname = -join (( 0x41..0x5A) + ( 0x61..0x7A) | Get-Random -Count\
      \ 13 | % {[char]$_});\n  Copy-Item $_.FullName -Destination \"C:\\Users\\Public\\\
      sensitive_file_backups\\$randname\";\n  $output = \"$($output)$($_.FullName)>$($randname)`n\"\
      \n};\n$output;"
  plugin: response
  technique_name: x
  singleton: false
  id: 34bc0116-13b6-4dd5-b681-9554c2a1fa95
